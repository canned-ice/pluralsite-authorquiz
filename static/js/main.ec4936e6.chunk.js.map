{"version":3,"sources":["AuthorQuiz.js","components/AddAuthorForm.js","serviceWorker.js","index.js"],"names":["Hero","react_default","a","createElement","className","Book","_ref","title","onClick","Turn","_ref2","author","books","highlight","onAnswerSelected","style","backgroundColor","none","correct","wrong","highlightToBgColor","src","imageUrl","alt","map","key","Continue","_ref3","show","onContinue","Footer","id","href","AuthorQuiz","_ref4","turnData","Object","assign","react_router_dom","to","AuthorForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","bookTemp","onFieldChange","bind","assertThisInitialized","handleSubmit","handleAddBook","event","preventDefault","onAddAuthor","setState","defineProperty","target","value","concat","onSubmit","htmlFor","type","onChange","book","Component","AddAuthorForm","AddAuthorForm_AuthorForm","Boolean","window","location","hostname","match","authors","imageSource","imageAttribution","getTurnData","allBooks","reduce","p","c","i","fourRandomBooks","shuffle","slice","answer","sample","find","some","resetState","isCorrect","render","App","src_AuthorQuiz","AuthorWrapper","withRouter","history","components_AddAuthorForm","push","ReactDOM","Fragment","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec4936e6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport './bootstrap.min.css'\n\nfunction Hero() {\n  return (\n    <div className=\"row\">\n      <div className=\"jumbotron col-10 offset-1\">\n        <h1>Author Quiz</h1>\n        <p>Select the book written by the author shown</p>\n      </div>\n    </div>\n  )\n}\n\nfunction Book({title, onClick}) {\n  return (\n    <div className=\"answer\" onClick={() => {onClick(title);}}>\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nfunction Turn({author, books, highlight, onAnswerSelected}) {\n  function highlightToBgColor(highlight) {\n    const mapping = {\n      'none': '',\n      'correct': 'green',\n      'wrong': 'red'\n    };\n    return mapping[highlight];\n  }\n\n  return (\n    <div className=\"row turn\" style={{backgroundColor: highlightToBgColor(highlight)}}>\n      <div className=\"col-4 offset-1\">\n        <img src={author.imageUrl} className=\"authorimage\" alt=\"Author\" />\n      </div>\n      <div className=\"col-6\">\n        {books.map((title) => <Book title={title} key={title} onClick={onAnswerSelected}/>)}\n      </div>\n    </div>\n  );\n}\nTurn.propTypes = {\n  author: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    imageSource: PropTypes.string.isRequired,\n    books: PropTypes.arrayOf(PropTypes.string).isRequired\n  }),\n  books: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  highlight: PropTypes.string.isRequired\n}\n\nfunction Continue({ show, onContinue }) {\n  return (\n    <div className=\"row continue\">\n    { show\n      ? <div className=\"col-11\">\n        <button className=\"btn btn-primary btn-lg float-right\" onClick={onContinue}>Continue</button>\n        </div>\n      : null }\n    </div>\n  );\n};\n\nfunction Footer() {\n  return (\n    <div id=\"footer\" className=\"row\">\n      <div className=\"col-12\">\n        <p className=\"text-muted credit\">\n          All images are from <a href=\"http://commons.wikimedia.org\">Wikimedia Commons</a> and are in the public domain\n        </p>\n      </div>\n    </div>\n  );\n}\n\nfunction AuthorQuiz({turnData, highlight, onAnswerSelected, onContinue}) {\n    return (\n      <div className=\"container-fluid\">\n        <Hero/>\n        <Turn {...turnData} highlight={highlight} onAnswerSelected={onAnswerSelected}/>\n        <Continue show={highlight === 'correct'} onContinue={onContinue}/>\n        <p><Link to=\"/add\">Add an author</Link></p>\n        <Footer />\n      </div>\n    );\n}\n\nexport default AuthorQuiz;\n","import React, { Component } from 'react';\nimport \"./AddAuthorForm.css\";\n\nclass AuthorForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            imageUrl: '',\n            books: [],\n            bookTemp: '',\n        };\n        this.onFieldChange = this.onFieldChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleAddBook = this.handleAddBook.bind(this);\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.onAddAuthor(this.state);\n    }\n    onFieldChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    handleAddBook(event) {\n        this.setState({\n            books: this.state.books.concat([this.state.bookTemp]),\n            bookTemp: ''\n        });\n    }\n    render() {\n        return <form onSubmit={this.handleSubmit}>\n            <div className=\"AddAuthorForm__input\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input \n                        type=\"text\" \n                        name=\"name\" \n                        value={this.state.name}\n                        onChange={this.onFieldChange}\n                    ></input>\n                </div>\n                <div className=\"AddAuthorForm__input\">\n                    <label htmlFor=\"imageUrl\">Image Url</label>\n                    <input \n                        type=\"text\" \n                        name=\"imageUrl\" \n                        value={this.state.imageUrl}\n                        onChange={this.onFieldChange}\n                    ></input>\n                </div>\n                <div className=\"AddAuthorForm__input\">\n                    <label htmlFor=\"bookTemp\">Books</label>\n                    {this.state.books.map((book) => <p key={book}>{book}</p>)}\n                    <input \n                        type=\"text\"\n                        name=\"bookTemp\"\n                        value={this.state.bookTemp}\n                        onChange={this.onFieldChange}\n                    ></input>\n                    <input \n                        type=\"button\" \n                        value=\"+\" \n                        onClick={this.handleAddBook}\n                    ></input>\n                </div>\n                <input type=\"submit\" value=\"Add\"></input>\n            </form>;\n    }\n}\n\nfunction AddAuthorForm({onAddAuthor}) {\n    return <div className=\"AddAuthorForm\">\n        <h1>Add Author</h1>\n        <AuthorForm onAddAuthor={onAddAuthor} />\n    </div>;\n}\n\nexport default AddAuthorForm;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, withRouter } from 'react-router-dom';\nimport './index.css';\nimport AuthorQuiz from './AuthorQuiz';\nimport AddAuthorForm from './components/AddAuthorForm';\nimport * as serviceWorker from './serviceWorker';\nimport { sample,shuffle } from 'underscore';\n\nconst authors = [\n    {\n        name: 'Mark Twain',\n        imageUrl: 'images/authors/marktwain.jpg',\n        imageSource: 'Wikimedia Commons',\n        books: ['The Adventures of Huckleberry Finn']\n    },\n    {\n        name: 'Joseph Conrad',\n        imageUrl: 'images/authors/josephconrad.png',\n        imageSource: 'Wikimedia Commons',\n        books: ['Heart of Darkness']\n    },\n    {\n        name: 'J.K. Rowling',\n        imageUrl: 'images/authors/jkrowling.jpg',\n        imageSource: 'Wikimedia Commons',\n        imageAttribution: 'Daniel Ogren',\n        books: ['Harry Potter and the Sorcerers Stone']\n    },\n    {\n        name: 'Stephen King',\n        imageUrl: 'images/authors/stephenking.jpg',\n        imageSource: 'Wikimedia Commons',\n        imageAttribution: 'Pinguino',\n        books: ['The Shining', 'IT']\n    },\n    {\n        name: 'Charles Dickens',\n        imageUrl: 'images/authors/charlesdickens.jpg',\n        imageSource: 'Wikimedia Commons',\n        books: ['David Copperfield', 'A Tale of Two Cities']\n    },\n    {\n        name: 'William Shakespeare',\n        imageUrl: 'images/authors/williamshakespeare.jpg',\n        imageSource: 'Wikimedia Commons',\n        books: ['Hamlet', 'Macbeth', 'Romeo and Juliet']\n    }\n];\n\nfunction getTurnData(authors) {\n    const allBooks = authors.reduce(function (p, c, i) {\n        return p.concat(c.books);\n    }, []);\n    const fourRandomBooks = shuffle(allBooks).slice(0,4);\n    const answer = sample(fourRandomBooks);\n\n    return {\n        books: fourRandomBooks,\n        author: authors.find((author) => author.books.some((title) => title === answer))\n    }\n}\n\nfunction resetState() {\n    return {\n        turnData: getTurnData(authors),\n        highlight: ''\n    };\n}\n\nlet state = resetState();\n\nfunction onAnswerSelected(answer) {\n    const isCorrect = state.turnData.author.books.some((book) => book === answer);\n    state.highlight = isCorrect ? 'correct' : 'wrong';\n    render();\n}\n\nfunction App() {\n    return <AuthorQuiz {...state} \n        onAnswerSelected={onAnswerSelected}\n        onContinue={() => {\n            state = resetState();\n            render();\n        }}\n    />;\n}\n\nconst AuthorWrapper = withRouter(({ history }) =>\n    <AddAuthorForm onAddAuthor={(author) => {\n        authors.push(author);\n        history.push('/');\n    }} />\n);\n\nfunction render() {\n    ReactDOM.render(\n        <HashRouter>\n            <>\n                <Route exact path=\"/\" component={App} />\n                <Route path=\"/add\" component={AuthorWrapper} />\n            </>\n        </HashRouter>, \n        document.getElementById('root')\n    );\n}\nrender();\nserviceWorker.unregister();\n"],"sourceRoot":""}